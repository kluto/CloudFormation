Description: >
  Server template for a for a VPC with Public and Private Subnets (NAT)


Parameters:

  EnvironmentName:
    Description: Name of the enviroment
    Type: String


Resources:

  WebServerSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
        GroupDescription: Allow http to client host
        VpcId:
          Fn::ImportValue:
            !Sub "${EnvironmentName}-VPCID"
        SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: 80
            ToPort: 80
            CidrIp: 0.0.0.0/0
          - IpProtocol: tcp
            FromPort: 443
            ToPort: 443
            CidrIp: 0.0.0.0/0
          - IpProtocol: tcp
            FromPort: 22
            ToPort: 22
            CidrIp: 0.0.0.0/0 #change to home network
          - IpProtocol: tcp
            FromPort: 3389
            ToPort: 3389
            CidrIp: 0.0.0.0/0 #change to home network
        SecurityGroupEgress:
          - IpProtocol: tcp
            FromPort: 80
            ToPort: 80
            CidrIp: 0.0.0.0/0
          - IpProtocol: tcp
            FromPort: 443
            ToPort: 443
            CidrIp: 0.0.0.0/0

  DBServerSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
        GroupDescription: Allow db connections
        VpcId:
          Fn::ImportValue:
            !Sub "${EnvironmentName}-VPCID"
        SecurityGroupEgress:
          - IpProtocol: tcp
            FromPort: 80
            ToPort: 80
            CidrIp: 0.0.0.0/0
          - IpProtocol: tcp
            FromPort: 443
            ToPort: 443
            CidrIp: 0.0.0.0/0

  WebServerOutboundRule1:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId: !Ref WebServerSG
      IpProtocol: tcp
      FromPort: 1433
      ToPort: 1433
      DestinationSecurityGroupId: !Ref DBServerSG

  WebServerOutboundRule2:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId: !Ref WebServerSG
      IpProtocol: tcp
      FromPort: 3306
      ToPort: 3306
      DestinationSecurityGroupId: !Ref DBServerSG

  DBServerInboundRule1:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref DBServerSG
      IpProtocol: tcp
      FromPort: 1433
      ToPort: 1433
      SourceSecurityGroupId: !Ref WebServerSG

  DBServerInboundRule2:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref DBServerSG
      IpProtocol: tcp
      FromPort: 3306
      ToPort: 3306
      SourceSecurityGroupId: !Ref WebServerSG

  WebServer: 
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-06d51e91cea0dac8d
      InstanceType: t2.micro
      NetworkInterfaces:
        - DeviceIndex: "0"
          SubnetId:
            Fn::ImportValue:
              !Sub "${EnvironmentName}-PUB-SN"
          GroupSet: 
            - !GetAtt WebServerSG.GroupId
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt-get update -y

  WebServerEIP:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: !Ref WebServer
      
  DBServer: 
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-06d51e91cea0dac8d
      InstanceType: t2.micro
      NetworkInterfaces:
        - DeviceIndex: "0"
          SubnetId:
            Fn::ImportValue:
              !Sub "${EnvironmentName}-PRI-SN"
          GroupSet: 
            - !GetAtt DBServerSG.GroupId
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt-get update -y          

